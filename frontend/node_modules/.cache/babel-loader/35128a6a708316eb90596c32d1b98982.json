{"remainingRequest":"/home/derickcoy/frontend/node_modules/babel-loader/lib/index.js!/home/derickcoy/frontend/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/derickcoy/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/derickcoy/frontend/src/components/Listar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/derickcoy/frontend/src/components/Listar.vue","mtime":1636763525370},{"path":"/home/derickcoy/frontend/babel.config.js","mtime":1636759495346},{"path":"/home/derickcoy/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/derickcoy/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/derickcoy/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/derickcoy/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL2Rlcmlja2NveS9mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdDb21wYW55RGF0YScsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGRpcmVjdG9yeTogW10KICAgIH07CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICB2YXIgcmVzdWx0OwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDA7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zKHsKICAgICAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLAogICAgICAgICAgICAgICAgdXJsOiAnaHR0cDovL2xvY2FsaG9zdDo4MDAwL2dyYXBocWwnLAogICAgICAgICAgICAgICAgZGF0YTogewogICAgICAgICAgICAgICAgICBxdWVyeTogIlxuICAgICAge1xuICAgICAgICAgIGFsbENhdGVnb3JpZXMge1xuICAgICAgICAgICAgICAgICAgICBlZGdlcyB7XG4gICAgICAgICAgICAgICAgICAgIG5vZGUge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWRcbiAgICAgICAgICAgICAgICAgICAgICAgIGF1dG9yXG4gICAgICAgICAgICAgICAgICAgICAgICBhdXRvckRlbExpYnJvXG4gICAgICAgICAgICAgICAgICAgICAgICBsaWJyb1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVzdW1lblxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICB9XG4gICAgICAiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgcmVzdWx0ID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICBfdGhpcy5kaXJlY3RvcnkgPSByZXN1bHQuZGF0YS5kYXRhLmFsbENhdGVnb3JpZXM7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEwOwogICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSA3OwogICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMCk7CiAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihfY29udGV4dC50MCk7CgogICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzAsIDddXSk7CiAgICB9KSkoKTsKICB9Cn07"},{"version":3,"sources":["Listar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA,OAAA,KAAA,MAAA,OAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,aADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,SAAA,EAAA;AADA,KAAA;AAGA,GANA;AAOA,EAAA,OAPA,qBAOA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEA,KAAA,CAAA;AACA,gBAAA,MAAA,EAAA,MADA;AAEA,gBAAA,GAAA,EAAA,+BAFA;AAGA,gBAAA,IAAA,EAAA;AACA,kBAAA,KAAA;AADA;AAHA,eAAA,CAFA;;AAAA;AAEA,cAAA,MAFA;AAuBA,cAAA,KAAA,CAAA,SAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,CAAA,aAAA;AAvBA;AAAA;;AAAA;AAAA;AAAA;AAyBA,cAAA,OAAA,CAAA,KAAA;;AAzBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2BA;AAlCA,CAAA","sourcesContent":["<template>\n<center>\n  <a :href=\"`/ingredientes/ingresar/`\" class=\"btn btn-info\">Crear</a>\n  <div class=\"col-sm-7\">\n    <div class=\"card text-center\" v-for=\"input in directory.edges\" :key=\"input.id\">\n      <div class=\"card-header\">\n        <h1 class=\"card-title\">{{ input.node.autor }}</h1>\n      </div>\n      <div class=\"card-body\">\n        <h5>Autor de Libro</h5>\n        <p class=\"card-text\">{{ input.node.autorDelLibro }}</p>\n      </div>\n      <div class=\"card-body\">\n        <h5>Libro</h5>\n        <p class=\"card-text\">{{ input.node.libro }}</p>\n      </div>\n      <div class=\"card-body\">\n        <h5>Resumen</h5>\n        <p class=\"card-text\">{{ input.node.resumen }}</p>\n      </div>\n      \n      <div class=\"card-footer text-muted\">\n        <td type=\"button\" class=\"btn btn-warning\"><a :href=\"`/ingredientes/editar/${input.node.id}/${input.node.name}/${input.node.descripcion}/${input.node.personas}`\">Editar</a></td>\n      </div>\n      <br><br><br>\n    </div>\n  </div>\n</center>\n \n</template>\n \n<script>\n  import axios from 'axios'\n  export default{\nname: 'CompanyData',\n    data(){\n      return {\n    directory: []\n      }\n    },\n    async mounted () {\n    try {\n  var result = await axios({\n    method: 'POST',\n    url: 'http://localhost:8000/graphql',\n    data: {\n      query: `\n      {\n          allCategories {\n                    edges {\n                    node {\n                        id\n                        autor\n                        autorDelLibro\n                        libro\n                        resumen\n                    }\n                    }\n                }\n      }\n      `\n    }\n    })\n    this.directory = result.data.data.allCategories\n    } catch (error) {\n    console.error(error)\n    }\n    }\n  }\n</script>\n"],"sourceRoot":"src/components"}]}